<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="address-mapper">

	<select id="deleteAddress">
		update address set a_status = 'N' where a_no = #{ list[i] }
	</select>
	
	<select id="insertAddress" resultType="_int">
		insert into address values(add_seq.nextval, #{name}, #{comName}, #{comPhone}, #{comAddress}, #{dept}, #{job}, #{address}, #{phone}, #{memo}, default, #{mNo}, #{email}, #{originalFileName}, #{renameFileName})
	</select>
	
	<select id="updateAddress" resultType="_int">
		update address set 
		a_name = #{name}, a_c_name = #{comName}, a_c_phone = #{comPhone}, a_c_address = #{comAddress}, a_dept = #{dept}, a_job = #{job}, a_address = #{address}, a_phone = #{phone}, a_memo = #{memo}, a_email = #{email}, rename_filename = #{renameFileName} 
		<if test="originalFileName != null">
			,original_filename = #{originalFileName}
		</if>
		where a_no = #{aNo}
	</select>

	<select id="detailAddress" resultMap="AddressResultSet">
		select * from address where a_no = #{ aNo } and a_status = 'Y'
	</select>
	
	<select id="detailMember" resultMap="MemberResultSet">
		select * from member 
			left join job using(j_code) 
			left join department using(d_code) 
		where m_no = #{mNo}
	</select>
	
	<select id="getListCount" resultType="_int">
		select count(*) from address where e_no = #{mNo} and a_status = 'Y'
		<if test="key != null">
			and a_name like '%' || #{key} || '%'
		</if>
		order by a_no desc
	</select>
	
	<select id="selectAddress" resultMap="AddressResultSet">
		select * from address where e_no = #{mNo} and a_status = 'Y'
		<if test="key != null">
			and a_name like '%' || #{key} || '%'
		</if>
		 order by a_no desc
	</select>
	
	<select id="getListCount2" resultType="_int">
		select count(*) from member join job using(j_code) join department using(d_code) where m_status = 'Y'
		<if test="key != null">
			and m_name like '%' || #{key} || '%'
		</if>
		<if test="jobKey != 'zero'">
			and j_code = #{ jobKey }
		</if>
		<if test="deptKey != 'zero'">
			and d_code = #{ deptKey }
		</if>
		order by m_ent_date desc
	</select>
	
	<select id="selectAddress2" resultMap="MemberResultSet">
		select * from member join job using(j_code) join department using(d_code) where m_status = 'Y'
		<if test="key != null">
			and m_name like '%' || #{key} || '%'
		</if>
		<if test="jobKey != 'zero'">
			and j_code = #{ jobKey }
		</if>
		<if test="deptKey != 'zero'">
			and d_code = #{ deptKey }
		</if>		
		order by m_ent_date desc
	</select>

	<resultMap type="Address" id="AddressResultSet">
		<id column="A_NO" property="aNo"/>
		<result column="A_NAME" property="name"/>
		<result column="A_C_NAME" property="comName"/>
		<result column="A_C_PHONE" property="comPhone"/>
		<result column="A_C_ADDRESS" property="comAddress"/>
		<result column="A_DEPT" property="dept"/>
		<result column="A_JOB" property="job"/>
		<result column="A_ADDRESS" property="address"/>
		<result column="A_PHONE" property="phone"/>
		<result column="A_MEMO" property="memo"/>
		<result column="A_STATUS" property="status"/>
		<result column="E_NO" property="mNo"/>
		<result column="A_EMAIL" property="email"/>
		<result column="ORIGINAL_FILENAME" property="originalFileName"/>
		<result column="RENAME_FILENAME" property="renameFileName"/>
	</resultMap>
	
	<resultMap type="Member" id="MemberResultSet">
		<id column="M_NO" property="mNo"/>
		<result column="M_NAME" property="mName"/>
		<result column="M_GENDER" property="mGender"/>
		<result column="M_BIRTHDAY" property="mBirthDay"/>
		<result column="M_PHONE" property="mPhone"/>
		<result column="M_EMAIL" property="mEmail"/>
		<result column="M_ADDRESS" property="mAddress"/>
		<result column="M_ENT_DATE" property="mEntDate"/>
		<result column="M_HIRE_DATE" property="mHireDate"/>
		<result column="J_NAME" property="jCode"/>
		<result column="D_NAME" property="dCode"/>
		<result column="M_ORIGINPROFILE" property="mOriginProfile"/>
		<result column="M_RENAMEPROFILE" property="mRenameProfile"/>
	</resultMap>

</mapper>
